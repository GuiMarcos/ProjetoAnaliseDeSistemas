/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.utfpr.projetoanalisedesistemas;

import java.awt.CardLayout;
import java.awt.Desktop;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;
import javax.print.Doc;
import javax.print.DocFlavor;
import javax.print.DocPrintJob;
import javax.print.PrintException;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import javax.print.SimpleDoc;
import javax.swing.JFrame;


public class MainClass extends javax.swing.JFrame {
    /**
     * Creates new form MainClass
     */
    protected static BancoDeDados bancoDeDados;
    protected static List<Aluno> alunosCompraram = new ArrayList<Aluno>();
    
    public MainClass() {
        bancoDeDados = new BancoDeDados();
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Self-RU");
        setBackground(new java.awt.Color(255, 204, 51));
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setName("FramePrincipal"); // NOI18N
        setResizable(false);
        setSize(new java.awt.Dimension(1280, 800));

        panelPai.setBackground(new java.awt.Color(255, 204, 51));
        panelPai.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        panelPai.setPreferredSize(new java.awt.Dimension(1280, 800));
        panelPai.setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * @param args the command line arguments
     */ 
    static void switchScreen(Screen screen, String cardName){
            panelPai.add(screen, cardName);
            CardLayout cl = (CardLayout) panelPai.getLayout();
            cl.show(panelPai, cardName);
    }
    
    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame window = new MainClass();
                window.setVisible(true);
                Screen loginScreen = new LoginScreen();
                switchScreen(loginScreen, "loginScreen");
            }
        });
    }
    
    public static boolean alunoComprou(Aluno a){
        for(int i=0; i<alunosCompraram.size(); i++){
            if(a.getRA().equals(alunosCompraram.get(i).getRA())){
                return true;
            }
        }
        return false;
    } 
    
    public static void imprimeAlunosCompraram(){
        for(int i=0; i<alunosCompraram.size(); i++){
            System.out.println("aluno "+i+":"+alunosCompraram.get(i).getName()+" RA:"+alunosCompraram.get(i).getRA());
        }
        
    }
    
    /*IMPRESSÃO
    public static void imprimeTicket(String caminhoArquivo, Ticket compraTotal){
        Aluno estudante = Screen.getEstudanteLogado();
        List<String> adicionais = compraTotal.getAdicionais();
        String nomeEstudante = estudante.getName();
        String raEstudante = estudante.getRA();
        Path caminho = Paths.get(caminhoArquivo);
        
        String textoTicket = nomeEstudante+" "+raEstudante+"\n - Refeição;\n";
        
        for(int i=0; i<adicionais.size(); i++){
                textoTicket = textoTicket+" - "+adicionais.get(i)+"\n";
        }
        textoTicket = textoTicket+"\n\n\n"+"--- UTFPR CAMPUS CENTRO ---";
        
        byte[] textoTicketEmByte = textoTicket.getBytes();
        
        try{
            Files.write(caminho, textoTicketEmByte);
        }catch(Exception erro){
            erro.printStackTrace();
        }
        
        // MODO 1 - Travando
        /*PrintService iPadrao = PrintServiceLookup.lookupDefaultPrintService();
        DocFlavor docFlavor = DocFlavor.INPUT_STREAM.AUTOSENSE;
        
        try {
            FileInputStream stream = new FileInputStream(caminhoArquivo);

            Doc doc = new SimpleDoc(stream, docFlavor, null);
            DocPrintJob p = iPadrao.createPrintJob();
            p.print(doc, null);
        } catch (Exception e) {
            e.printStackTrace();
        }*/
        //MODO 2
        /*
        try{
            File arquivo = new File(caminhoArquivo);
            Desktop.getDesktop().print(arquivo);
        }
        catch(Exception erro){
            erro.printStackTrace();
        }
        
    }
    */ 
    
    /*public static void enviaEmail(String emailDest){
        SimpleEmail email = new SimpleEmail();
        
        email.setHostName(hostName);
        email.setSmtpPort(hostPort);
        email.setAuthenticator(new DefaultAuthenticator(emailOrigem, senhaEmailOrigem));
        email.setSSLOnConnect(true);
        
        try{
            email.setFrom(emailOrigem);
            email.setSubject("Teste envio email");
            email.setMsg("Teste programa projeto e analise de sistemas");
            email.addTo("bschettini05@gmail.com");
            email.send();
            System.out.println("Email enviado com sucesso!");
        }catch(Exception e){
            e.printStackTrace();
        }
    }*/
    
    public static void addAluno(Aluno a){
        alunosCompraram.add(a);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static final javax.swing.JPanel panelPai = new javax.swing.JPanel();
    // End of variables declaration//GEN-END:variables
}